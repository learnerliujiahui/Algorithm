/**
 * 
 * date: 2020/03/18
 * 
 * const限定符通常和指针结合在一起使用
 * 
 * 其中又分为：
 * 顶层 const:
 * 底层 const:
*/
#include <iostream>

int main() {
	int i = 10, j = 30;
	int *p1 = &i; // 无const限定
	*p1 = 20; // 因此可以任意改变指向变量的值(i-->20)
	p1 = &j;  // 也可以改变指针变量指向的变量(p1指向j)

	// 指向常量的指针：指向变量的值不能改，但是可以指向不同的变量，即指向不同的地址（底层const）
	const int *p2; // const在*前面(也可以写成int const *p2)
	p2 = &i;	// p2 的指向可以改变(意味着p2不是常量)
	p2 = &j;
	// *p2 = 100; 错误， *p2改变不了变量值(意味着 *p2 是常量)

	// 常量指针：指针本身是常量，即指针指向的地址不能改，但指针指向变量的值可以修改（顶层const）
	int * const p3 = &i; // const 在 * 后面
	// p3 = &j; 错误,p3的指向不能改变(p3是常量)
	*p3 = 100; // OK, *p3可以改变，意味着p3指向变量的值可以改变

	// 指向常量的常量指针：指针指向的地址不能改，指向变量的值也不能改
	const int * const p4 = &i; // 两个const限定符
	// p4 = &j; 错误
	// *p4 = 100; 错误
	return 0;
}