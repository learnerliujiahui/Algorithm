/**
 * @date:2021-01-09
 * 
 * 静态类型：编译时已知，变量声明的类型
 * 动态类型：编译时未知，运行时才知道，变量在内存中对象的真实类型
 * 
 * e.x.:
 * class D1: public Base {};
 * 
 * 如果声明类型既不是引用，也不是指针，那么对象的静态类型和动态类型一致
 * Base b1;  // 对象b1的静态类型是Base,动态类型也是Base
 * D1 d1;    // 对象d1的静态类型是D1，动态类型也是D1
 * 
 * 基类的指针或者引用指向派生类的情况，对象的静态类型和动态类型可能不一致
 * Base& rb = b1;
 * Base& rb = d1;   // 引用，变量rb的静态类型是base&,动态类型是D1&
 * 
 * Base* pb = &b1;
 * Base* pb = &d1;  // 指针，变量pb的静态类型是Base*,动态类型是D1*
*/